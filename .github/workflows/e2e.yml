name: E2E

on:
  pull_request:

permissions:
  contents: write

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        stack-type: [ethereum, fabric]
        exclude: [stack-type: ethereum, stack-type: fabric]
        include:
          - stack-type: ethereum
            blockchain-connector: evmconnect
            test-suite: TestEthereumMultipartyE2ESuite
            database-type: sqlite3
            token-provider: erc20_erc721
            multiparty-enabled: true

          - stack-type: ethereum
            blockchain-connector: evmconnect
            test-suite: TestEthereumMultipartyE2ESuite
            database-type: postgres
            token-provider: erc20_erc721
            multiparty-enabled: true

          - stack-type: ethereum
            blockchain-connector: evmconnect
            test-suite: TestEthereumMultipartyE2ESuite
            database-type: sqlite3
            token-provider: erc1155
            multiparty-enabled: true

          - stack-type: ethereum
            blockchain-connector: evmconnect
            test-suite: TestEthereumMultipartyTokensRemoteNameE2ESuite
            database-type: postgres
            token-provider: erc20_erc721
            multiparty-enabled: true

          - stack-type: fabric
            test-suite: TestFabricE2ESuite
            database-type: sqlite3
            token-provider: none
            multiparty-enabled: true

          - stack-type: ethereum
            blockchain-connector: evmconnect
            test-suite: TestEthereumGatewayE2ESuite
            database-type: sqlite3
            token-provider: erc20_erc721
            multiparty-enabled: false

          - stack-type: fabric
            test-suite: TestFabricGatewayE2ESuite
            database-type: sqlite3
            token-provider: none
            multiparty-enabled: false

          - stack-type: ethereum
            blockchain-connector: ethconnect
            test-suite: TestEthereumMultipartyE2ESuite
            database-type: sqlite3
            token-provider: erc20_erc721
            multiparty-enabled: true

          - stack-type: ethereum
            blockchain-connector: ethconnect
            test-suite: TestEthereumGatewayLegacyEthE2ESuite
            database-type: sqlite3
            token-provider: erc1155
            multiparty-enabled: false

    steps:
      - name: Checkout FireFly CLI
        uses: actions/checkout@v4
        with:
          path: firefly-cli
          fetch-depth: 0
      - name: Checkout FireFly Core repo
        uses: actions/checkout@v4
        with:
          repository: hyperledger/firefly
          path: firefly

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.2"

      - name: Compile FireFly CLI
        working-directory: firefly-cli
        run: make install

      - name: Run E2E tests
        working-directory: firefly
        env:
          DOWNLOAD_CLI: false
          TEST_SUITE: ${{ matrix.test-suite }}
          STACK_TYPE: ${{ matrix.stack-type }}
          BLOCKCHAIN_CONNECTOR: ${{ matrix.blockchain-connector }}
          TOKENS_PROVIDER: ${{ matrix.token-provider }}
          DATABASE_TYPE: ${{ matrix.database-type }}
          MULTIPARTY_ENABLED: ${{ matrix.multiparty-enabled }}
        run: ./test/e2e/run.sh

      - name: Archive container logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: container-logs-${{ matrix.test-suite }}-${{ matrix.blockchain-provider }}-${{ matrix.blockchain-connector }}-${{ matrix.database-type }}-${{ matrix.token-provider }}
          path: containerlogs/logs.txt
